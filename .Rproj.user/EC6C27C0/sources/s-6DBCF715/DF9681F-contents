---
  output:
  pdf_document: default
  html_document: default
---
  Casestudy: Exploring grassland communities
================

  ### Description

  The following code can be used to reproduce the figures of the casestudy "Exploring grassland communities", which is part of the paper "QtAC: an R-package for analyzing complex systems development in the framework of the adaptive cycle metaphor" (Schrenk, Schreiber, Garcia-Perez).

### Prerequisites

-   R &gt;= 3.6
-   RStudio &gt;= 1.3 (optional)
-   Java (JDK) &gt;= 1.8
-   perl &gt;= 5

### Install packages
``` r
source("install_packages_QtAC.R")
install.packages("QtAC_1.0.tar.gz", repos = NULL, type = "source")
```

### Load libraries

``` r
library("rJava")
library("igraph")
library("rgl")
library("pracma")
library("RColorBrewer")
pal <- brewer.pal(4,"Accent")
library("gplots")
library("ggplot2")
library("dplyr")
library("plotrix")
library("stringr")
library("QtAC")
```

### Set paths

``` r
#Set the working directory path
work_folder <- "/path/to/the/working/directory/"

#Path to the MTinfodynamics.jar file
infodyn_path <- "dist/MTinfodynamics.jar"
setwd(work_folder)

#Set path to the datasets
datasets_pth <- "/path/to/the/datasets/casestudies/"
```

**NOTE:** A certain amount of additional random Gaussian noise is required to guarantee the functioning of the KSG-estimator as being incorporated in the JIDT toolkit (see Kraskov 2008, Lizier 2014). Hence, results usually cannot be identically reproduced. However, the amount of random noise added is chosen small enough to guarantee very similar results.

### Estimating the information transfer

The following computations can take up to six hours. Alternatively, directly use the files provided in "Results_casestudies.7z".

``` r
fnames <- list.files(datasets_pth)

for(fn in fnames){
  print(paste("running file:", fn))
  observ_data <- paste0(datasets_pth,fn)
  output_fname <- paste0(work_folder, "QtAC_", str_replace(fn, ".txt",""))
  Data <- QtAC.TXT.reader(observ_data, col_names = TRUE, row_names = TRUE)
  QtAC(Data, num_timepoints = 5, noise_level = "1e-30", javapath = infodyn_path,
       filename = output_fname, save = TRUE)
  gc()
}
```

## Abundance data and networks of information transfer (Figure 2)

``` r
# get all species names
all_data_names <- paste0(datasets_pth, "B1A22_60_4.txt")
Data <- QtAC.TXT.reader(all_data_names,  col_names = TRUE, row_names = TRUE)
all_species <- rownames(Data)

observ_data <- paste0(datasets_pth, "B4A18_16_4.txt")
Data <- QtAC.TXT.reader(observ_data, col_names = TRUE, row_names = TRUE)
result_mtx <- get(load(paste0(work_folder, "QtAC_B4A18_16_4.Rdata")))
result_mtx2 <- QtAC.signfactor(result_mtx, 0.1)

### Abundance data
time <- as.numeric(rep(seq(1, 9), each=16))
species <- rep(rownames(Data), times=9)
value <- as.vector(as.matrix(Data))
data <- data.frame(time,  value, species)

png(file = paste0(work_folder, "AbundanceData.png"), width = 800, height = 800)
ggplot(data, aes(x=time, y=value, fill = species)) +
  geom_area() +
  scale_x_discrete(name = "year",
                   breaks=seq(1,9,1),
                   labels=colnames(Data),
                   limits = seq(1,9,1)) +
  labs(y = expression(paste("abundance [g/m"^"2","]"))) +
  theme(axis.text.x = element_text(size=10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size=15),
        axis.title.y = element_text(size = 15),
        legend.title = element_text(size = 15),
        legend.text = element_text(size = 15))
invisible(dev.off())
```

  ### Networks of information transfer

  ``` r
grasses <- c(4, 3, 1, 5, 8, 9, 13, 19, 20, 21, 25, 29, 40, 41, 43, 52)
legumes <- c(32, 30, 34, 35, 36, 50, 51, 53, 54, 56, 58, 60)
smallherbs <- c(6, 10, 22, 28, 31, 37, 39, 44, 45, 48, 55, 59)

fg <- rep(4, 60)
fg[grasses] <- 1
fg[legumes] <- 2
fg[smallherbs] <- 3

plot_species <- rownames(Data)
fgs1 <- rep(0, dim(Data)[1])
for(f in 1:(dim(Data)[1])){
  fgs1[f] <- which(all_species == plot_species[f])
}

fgs2 <- fg[fgs1]
years <- colnames(Data)

for(n in 1:5){
  png(file = paste0(work_folder, years[n+4],".png"), width = 600, height = 600)
  QtAC.network(result_mtx2, col_node = pal[fgs2], num_mtx = n,
               edge_label = FALSE, dec = 3, arrow_width = 2, layout = "nicely",
               vertex_label = "short", save = FALSE, title = years[n+4])
  if(n==1){
    legend("topleft",
           legend = c("grasses", "legumes", "small herbs", "tall herbs"),
           fill = pal, lty = 1)
  }
  invisible(dev.off())
}
```

  ### Systemic Variables in two and three dimensions (Figure 3)

  ``` r
result_mtx <- get(load(paste0(work_folder,"QtAC_B4A18_16_4.Rdata")))
result_mtx2 <- QtAC.signfactor(result_mtx,0.1)
maturation <- QtAC.maturation(result_mtx2, res_stand = "maxweight")
```

 ### Systemic variables in two dimensions

``` r
QtAC.2dplot(maturation, save = TRUE,
            filename = paste0(work_folder,"Maturation_B4A18_16_4"))
```

  ### Systemic variables in three dimensions

  ``` r
QtAC.3dplot(maturation)
snapshot3d(paste0(work_folder, "3dMaturation_B4A18_16_4.png"), width = 600, height = 600)
```

  ### Systemic variables in three dimensions and colored (Figure 4)

  ``` r
axis <- seq(1, dim(maturation)[1], 1)
steps <- seq(1, dim(maturation)[1], 0.01)

x <- maturation[, 1]
y <- maturation[, 2]
z <- maturation[, 3]

x1 <- pchip(axis, x, steps)
y1 <- pchip(axis, y, steps)
z1 <- pchip(axis, z, steps)

plot3d(y, x, z, pch=19, cex=0.25, size=0.5, type = "s", col="black", xlab = "",
       ylab = "", zlab = "")
lines3d(y1, x1, z1, col=smoothColors("green", 50, "red", 100, "red", 25, "orange", 50,
                                     "orange", 25, "green", 100, "green", 40, "#788700", 11, "#788700"), lwd=10)
arrow3d(c(y1[390], x1[390], z1[390]), c(y1[401], x1[401], z1[401]),
        type="lines", s=2/3, col = "#5AA500", lwd=9)
snapshot3d(paste0(work_folder, "3dMaturation_B4A18_16_4_colored.png"),
           width = 600, height = 600)
knitr::include_graphics(paste0(work_folder, "3dMaturation_B4A18_16_4_colored.png"))
```

  ### Heatmap of eigencentralities (Figure 5)

  ``` r
result_mtx <- get(load(paste0(work_folder, "QtAC_B4A18_16_4.Rdata")))
result_mtx2 <- QtAC.signfactor(result_mtx, 0.1)

eigs <- matrix(NA, 16, 5)

for(n in 1:5){
  adj_mtx <- result_mtx2[[1]][[n]]
  graph_adj_mtx <- graph.adjacency(adj_mtx, mode="directed", weighted=TRUE)
  eigen <- eigen_centrality(graph_adj_mtx, directed = FALSE, scale = FALSE)
  eigs[, n] <- eigen$vector
}

png(file= paste0(work_folder,"Heatmap_B4A18_16_4.png"), width = 600, height = 800)
par(mar=c(10,6,15,1)+.1, cex.lab = 2, cex.axis = 1.5)
heatmap.2(eigs,
          lhei = c(1,5),
          Colv = FALSE,
          ylab = NA,
          dendrogram = "none",
          key = "TRUE",
          key.title = "",
          key.xlab = "eigencentrality",
          density.info = "none",
          trace= "none",
          labCol = years[5:9],
          labRow = all_species,
          cexRow = 1.5,
          cexCol = 1.5,
          margins = c(3,10),
          main = "Plot B4A18",
          cex = 2,
          srtCol = 0)
invisible(dev.off())
```

  ### Boxplots of potential, connectedness, and resilience (Figure 6)

  ``` r
sysvars <- matrix(NA, nrow=16, ncol=3)
groups <- rep(NA,16)
fnames <- list.files(work_folder)

r <- 1
for(fn in fnames) {
  if (str_detect(fn, "_8_")) {
    gp <- unlist(str_split(fn,"_",n=4))[4]
    gp <- strtoi(gsub(".Rdata","",gp))
    result_mtx <- get(load(paste0(work_folder, fn)))
    result_mtx2 <- QtAC.signfactor(result_mtx, 0.1)
    maturation <- QtAC.maturation(result_mtx2)
    sysvars[r,1] <- maturation[5,1]
    sysvars[r,2] <- maturation[5,2]
    sysvars[r,3] <-  maturation[5,3]
    groups[r] <- gp
    r <- r+1
  }
}

png(file = paste0(work_folder, "Potconres.png"), width = 600, height = 800)
par(mfrow=c(3,1))
for(m in 1:3){
  df <- data.frame(sysvar = as.numeric(sysvars[, m]), group = as.numeric(groups))
  par(cex.lab = 2, cex.axis = 1.5)
  par(mar=c(5, 6, 4, 1)+.1)
  boxplot(sysvar~group,
          data = df,
          col = c("snow1", "snow2", "snow3", "snow4"),
          xlab = "number of functional groups",
          ylab = colnames(maturation)[m])
}
invisible(dev.off())
```

  ### Scatterplot of resilience (Figure 7)

  ``` r
sysvar <- rep(NA, 16)
groups <- rep(NA, 16)

fnames <- list.files(work_folder)
r <-  1
anzs <- c(8, 16, 60)

for(i in 1:4) {
  for (h in 0:2) {
    for (j in 0:9) {
      for (s in 1:3) {
        for (t in 1:4) {
          kk <- paste("QtAC_B", i, "A", h, j, "_", anzs[s], "_", t, ".Rdata", sep = "")
          kk <- paste0(work_folder, kk)
          if (file.exists(kk)) {
            result_mtx <- get(load(kk))
            result_mtx2 <- QtAC.signfactor(result_mtx, 0.1)
            maturation <- QtAC.maturation(result_mtx2, res_stand = "maxweightnodes")
            sysvar[r] <-  maturation[5,3]
            groups[r] <- s
            r <- r + 1
          }
        }
      }
    }
  }
}

png(file = paste0(work_folder, "resspecies.png"), width = 600, height = 400)
par(mar=c(5, 6, 4, 1) + .1)
par(cex.axis = 1.5, cex.lab = 2)
plot(as.numeric(groups),as.numeric(sysvar),
     cex = 2, lwd = 2,
     col = "red", xaxt = "n",
     ylab = "resilience", xlab = "number of species")
axis(side = 1, at= c(1, 2, 3), labels= c("8", "16", "60"))
invisible(dev.off())
```

  ### Abundance data (Figure 8)

  ``` r
observ_data <- paste0(datasets_pth, "B1A22_60_4.txt")
Data <- QtAC.TXT.reader(observ_data, col_names = TRUE, row_names = TRUE)

time <- as.numeric(rep(seq(1,9),each=60))
species <- rep(rownames(Data),times=9)
value <- as.vector(as.matrix(Data))
data <- data.frame(time, value, species)

png(file = paste0(work_folder, "AbundanceB1A22_60_4.png"), width = 800, height = 600)
ggplot(data, aes(x=time, y=value, fill = species)) + geom_area() +
  scale_x_discrete(name = "year", breaks=seq(1,9,1),labels=colnames(Data),
                   limits = seq(1,9,1)) +labs(y = expression(paste("abundance [g/m"^"2","]"))) +
  theme(axis.text.x = element_text(size=12),
        axis.text.y = element_text(size = 12),
        axis.title.x = element_text(size=12),
        axis.title.y = element_text(size = 15),
        legend.title = element_text(size = 12),
        legend.text = element_text(size = 12))
invisible(dev.off())
```

  ### Heatmap of eigencentralities (Figure 9)

  ``` r
observ_data <- paste0(work_folder, "QtAC_B1A22_60_4.Rdata")
result_mtx <- get(load(observ_data))
result_mtx2 <- QtAC.signfactor(result_mtx, 0.1)

eigs <- matrix(NA, 60, 5)

for (n in 1:5) {
  adj_mtx <- result_mtx2[[1]][[n]]
  graph_adj_mtx <- graph.adjacency(adj_mtx, mode = "directed", weighted = TRUE)
  eigen <- eigen_centrality(graph_adj_mtx, directed = FALSE, scale = FALSE)
  eigs[, n] <- eigen$vector
}

png(file = paste0(work_folder, "Heatmap_B1A22_60_4.png"), width = 600, height = 800)
par(mar = c(10, 6, 15, 1) + .1, cex.lab = 2, cex.axis = 1.5)
heatmap.2(eigs,
          lhei = c(1,6),
          Colv = FALSE,
          ylab = NA,
          dendrogram = "none",
          key = "TRUE",
          key.title = "",
          key.xlab = "eigencentrality",
          density.info = "none",
          trace= "none",
          labCol = years[5:9],
          labRow = all_species,
          cexRow = 0.9, #0.7
          cexCol = 1.5,
          margins = c(3,10),
          main = "Plot B1A22",
          cex = 2,
          srtCol = 0)
invisible(dev.off())
```

  ### Information in- and outflow (Figure 10)

  ``` r
observ_data <- paste0(work_folder, "QtAC_B1A22_60_4.Rdata")
result_mtx <- get(load(observ_data))
result_mtx2 <- QtAC.signfactor(result_mtx,0.1)

pdf(paste0(work_folder, "Netflow_B1A22_60_4.pdf"), onefile=T, paper = "a4r", width = 28)
par(mfrow=c(2,2))
rr <- c("A. pubescens","G. hederacea","H. lanatus","L. vulgare","R. repens",
        "T. officinale", "B. erectus")
ll <- c("A. odoratum","A. pratensis","A. sylvestris","B. hordeaceus",
        "C. cristatus","F. pratensis","C. patula","G. pratense","L. campestris",
        "M. lupulina","P. lanceolata","V. cracca")
for(g in 1:60){
  if(all_species[g] %in% rr){
    side <- "topright"
  } else if(all_species[g] %in% ll) {
    side <- "topleft"
  } else{
    side <- "top"
  }

  flows <- matrix(NA, 5, 2)
  for(f in 1:5){
    network <- result_mtx2[[1]][[f]]
    flows[f, 1] <- sum(network[, g])
    flows[f, 2] <- sum(network[g, ])
  }
  par(mar = c(5, 6, 4, 4) + .1)
  barplot(t(flows),
          main = all_species[g],
          beside = TRUE,
          ylab = "information [nats]",
          xlab = "year",
          names.arg = t(years[5:9]),
          cex.axis = 1,
          cex.lab = 1.6,
          cex.main = 1.5,
          cex.names = 1)
  legend(side,
         legend = c("Inflow","Outflow"),
         cex = 0.75,
         fill = grey.colors(2))
}
invisible(dev.off())
```

### Systemic variables in two and three dimensions (Figure 11)

``` r
observ_data <- paste0(work_folder, "QtAC_B1A22_60_4.Rdata")
result_mtx <- get(load(observ_data))
result_mtx2 <- QtAC.signfactor(result_mtx, 0.1)
maturation <- QtAC.maturation(result_mtx2, res_stand = "maxweight")
```
### Systemic variables in two dimensions

```r
QtAC.2dplot(maturation, save = TRUE,
            filename = paste0(work_folder,"Maturation_B1A22_60_4"))
```

### Systemic variables in three dimensions and colored

```r
axis <- seq(1,dim(mat)[1],1)
steps <- seq(1,dim(mat)[1],0.01)

x <- mat[,2]
y <- mat[,3]
z <- mat[,4]

x1 <- pchip(axis,x,steps)
y1 <- pchip(axis,y,steps)
z1 <- pchip(axis,z,steps)

plot3d(y, x, z, pch=19, cex=0.25, size=0.5 ,type = "s", col="black",xlab = "",ylab = "",zlab = "")
lines3d( y1, x1, z1, col=smoothColors("orange",50,"orange",100,"green",25,"green",50,"green",25,"green",100,"green",40,"#788700",11,"#788700"),lwd=10)
arrow3d(c(y1[390],x1[390],z1[390]),c(y1[401],x1[401],z1[401]), type="lines",s=2/3, col = "#5AA500",lwd=9)
aspect3d(1,1,1)
snapshot3d(paste0(work_folder, "3dMaturation_B1A22_60_4_colored.png"),
           width = 600, height = 600)
knitr::include_graphics(paste0(work_folder, "3dMaturation_B1A22_60_4_colored.png"))
```
